// This file has been automatically generated by writeMessageClasses.js

import { MessageFlags } from '../../enums/MessageFlags';
import { MessageBase } from '../MessageBase';
import { Message } from '../../enums/Message';

export class UnknownMessageMessage implements MessageBase
{
    name = 'UnknownMessage';
    messageFlags = MessageFlags.FrequencyHigh;
    id = Message.UnknownMessage;

    UnknownBlock: {
        UnknownContent: Buffer;
    };

    getSize(): number
    {
        return (this.UnknownBlock['UnknownContent'].length + 2);
    }

    // @ts-ignore
    writeToBuffer(buf: Buffer, pos: number): number
    {
        const startPos = pos;
        buf.writeUInt16LE(this.UnknownBlock['UnknownContent'].length, pos);
        pos += 2;
        this.UnknownBlock['UnknownContent'].copy(buf, pos);
        pos += this.UnknownBlock['UnknownContent'].length;
        return pos - startPos;
    }

    // @ts-ignore
    readFromBuffer(buf: Buffer, pos: number): number
    {
        const startPos = pos;
        let varLength = 0;
        const newObjUnknownBlock: {
            UnknownContent: Buffer
        } = {
            UnknownContent: Buffer.allocUnsafe(0)
        };
        varLength = buf.readUInt16LE(pos);
        pos += 2;
        newObjUnknownBlock['UnknownContent'] = buf.slice(pos, pos + varLength);
        pos += varLength;
        this.UnknownBlock = newObjUnknownBlock;
        return pos - startPos;
    }
}

